Starting audit...
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:13:13: Using the '.*' form of import should be avoided - stuff.*. [AvoidStarImport]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:73:5: Method length is 329 lines (max allowed is 150). [MethodLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:101: Line is longer than 100 characters (found 154). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:101:30: Name 'deck_input1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:104:14: Name 'deck_1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:105: Line is longer than 100 characters (found 154). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:105:30: Name 'deck_input2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:108:14: Name 'deck_2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:111:19: Name 'erou_1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:112:14: Name 'hero_1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:113:19: Name 'erou_2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:114:14: Name 'hero_2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:115:16: Name 'player_1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:116:16: Name 'player_2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:117: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:122:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:130:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:133:22: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:140:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:142:22: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:150:47: ')' is preceded with whitespace. [ParenPad]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:153:21: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:153:60: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:156: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:160:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:161:26: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:161:61: '5' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:161:90: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:164: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:166:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:167:26: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:167:60: '5' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:167:89: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:170: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:172:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:179: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:187: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:193:21: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:193:60: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:196: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:200:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:201:26: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:201:61: '5' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:201:90: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:204: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:206:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:207:26: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:207:60: '5' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:207:89: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:210: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:212:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:219: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:228: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:241:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:241:25: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:243:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:243:25: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:250: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:264:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:264:25: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:266:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:266:25: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:273: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:280:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:281:18: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:281:66: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:284:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:286:22: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:289:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:290:18: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:290:65: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:293:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:295:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:296:22: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:296:22: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:299:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:300:18: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:300:67: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:302:27: Name 'output_cards' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:303:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:303:52: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:305:17: '}' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:305:18: 'else' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:308:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:308:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:313:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:313:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:318:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:318:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:325:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:326:18: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:326:66: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:327: Line is longer than 100 characters (found 152). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:327:118: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:327:151: ')' is preceded with whitespace. [ParenPad]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:328: Line is longer than 100 characters (found 152). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:328:118: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:328:151: ')' is preceded with whitespace. [ParenPad]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:330:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:330:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:331: Line is longer than 100 characters (found 142). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:331:70: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:332:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:333: Line is longer than 100 characters (found 142). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:333:70: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:334:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:334:32: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:336:46: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:337:46: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:338: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:340:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:341:22: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:341:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:343:46: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:344:46: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:345: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:347:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:348:22: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:348:35: '3' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:348:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:350:46: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:351:46: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:354:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:355:22: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:355:35: '4' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:355:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:357:46: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:358:46: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:359: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:362:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:363:18: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:363:69: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:364: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:365:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:365:33: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:367:40: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:368:35: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:369:35: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:371:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:372:17: 'else' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:372:21: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:374:40: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:375:35: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\main\Main.java:376:35: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:4:14: Name 'abilities' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:5:5: Class 'abilities' looks like designed for extension (can be subclassed), but the method 'Weak_Knees' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'abilities' final or making the method 'Weak_Knees' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:5:10: Name 'Weak_Knees' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:5:21: Parameter minion should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:5:35: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:6:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:6:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:8:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:11:5: Class 'abilities' looks like designed for extension (can be subclassed), but the method 'Skyjack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'abilities' final or making the method 'Skyjack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:11:10: Name 'Skyjack' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:11:18: Parameter Miraj should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:11:25: Name 'Miraj' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:11:32: Parameter opponent should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:11:48: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:16:5: Class 'abilities' looks like designed for extension (can be subclassed), but the method 'Shapeshift' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'abilities' final or making the method 'Shapeshift' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:16:10: Name 'Shapeshift' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:16:21: Parameter minion should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:16:35: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:21:5: Class 'abilities' looks like designed for extension (can be subclassed), but the method 'Gods_plan' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'abilities' final or making the method 'Gods_plan' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:21:10: Name 'Gods_plan' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:21:20: Parameter minion should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:21:34: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:24:5: Class 'abilities' looks like designed for extension (can be subclassed), but the method 'Sub_Zero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'abilities' final or making the method 'Sub_Zero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:24:10: Name 'Sub_Zero' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:24:19: Parameter minion should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:24:32: Array brackets at illegal position. [ArrayTypeStyle]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:24:36: Parameter n should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:24:42: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:25:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\abilities.java:25:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Deck.java:5:31: Name 'CardsInDeck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Deck.java:6:17: Name 'NrOfCardsInDeck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Deck.java:8:17: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Deck.java:8:18: Parameter cards should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Deck.java:25:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'setNrOfCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'setNrOfCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Deck.java:25:36: Parameter nrOfCardsInDeck should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Deck.java:29:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'getNrOfCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'getNrOfCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Deck.java:33:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'getDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'getDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:6:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:12:26: Array brackets at illegal position. [ArrayTypeStyle]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:15:24: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:16:5: Class 'Erou' looks like designed for extension (can be subclassed), but the method 'setAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Erou' final or making the method 'setAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:16:28: Parameter hero should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:16:38: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:17:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:17:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:19:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:19:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:21:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:21:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:22:28: '3' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:23:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:23:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:24:28: '4' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:26:17: Parameter hero should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:26:32: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:27:23: '30' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:34:5: Class 'Erou' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Erou' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:34:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:38:5: Class 'Erou' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Erou' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:38:25: Parameter mana should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:42:5: Class 'Erou' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Erou' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:42:27: Parameter health should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:46:5: Class 'Erou' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Erou' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:46:32: Parameter description should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:50:5: Class 'Erou' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Erou' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:50:27: Parameter colors should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:54:5: Class 'Erou' looks like designed for extension (can be subclassed), but the method 'setAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Erou' final or making the method 'setAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:54:28: Parameter ability should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:58:5: Class 'Erou' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Erou' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:62:5: Class 'Erou' looks like designed for extension (can be subclassed), but the method 'getAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Erou' final or making the method 'getAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:66:5: Class 'Erou' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Erou' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:70:5: Class 'Erou' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Erou' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:74:5: Class 'Erou' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Erou' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Erou.java:78:5: Class 'Erou' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Erou' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:6:17: Name 'mana_to_receive' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:7:22: Parameter playerTurn should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:7:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:12:5: Class 'GameState' looks like designed for extension (can be subclassed), but the method 'getOverallTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameState' final or making the method 'getOverallTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:16:5: Class 'GameState' looks like designed for extension (can be subclassed), but the method 'getPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameState' final or making the method 'getPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:20:5: Class 'GameState' looks like designed for extension (can be subclassed), but the method 'setOverallTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameState' final or making the method 'setOverallTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:20:32: Parameter overallTurn should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:24:5: Class 'GameState' looks like designed for extension (can be subclassed), but the method 'setPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameState' final or making the method 'setPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:24:31: Parameter playerTurn should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:28:5: Class 'GameState' looks like designed for extension (can be subclassed), but the method 'getMana_to_receive' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameState' final or making the method 'getMana_to_receive' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:28:16: Name 'getMana_to_receive' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:32:5: Class 'GameState' looks like designed for extension (can be subclassed), but the method 'setMana_to_receive' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameState' final or making the method 'setMana_to_receive' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:32:17: Name 'setMana_to_receive' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:32:36: Parameter mana_to_receive should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:32:40: Name 'mana_to_receive' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:33:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:33:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:33:31: '10' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:34:36: '10' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:35:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:38: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:38:5: Class 'GameState' looks like designed for extension (can be subclassed), but the method 'Attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameState' final or making the method 'Attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:38:16: Name 'Attack' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:38:23: Parameter attacker should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:38:40: Parameter attacked should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:38:57: Parameter attacked_player should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:38:64: Name 'attacked_player' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:38:81: Parameter x should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:38:88: Parameter y should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:38:95: Parameter game should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:38:110: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:40: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:40:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:40:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:40:107: '==' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:40:110: '3' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:42:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:42:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:44:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:44:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:45:20: '3' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:46:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:46:88: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:47:20: '4' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:51:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:51:38: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:52:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:55:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:56:18: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:63:5: Class 'GameState' looks like designed for extension (can be subclassed), but the method 'resetAttack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameState' final or making the method 'resetAttack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:63:29: Parameter player1 should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:63:45: Parameter player2 should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:63:60: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:64:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:64:61: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:67:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:67:60: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:70:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:70:61: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:73:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:73:60: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:77:5: Class 'GameState' looks like designed for extension (can be subclassed), but the method 'getCardAtThisPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameState' final or making the method 'getCardAtThisPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:77:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:77:41: Parameter player1 should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:77:57: Parameter player2 should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:77:73: Parameter x should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:77:80: Parameter y should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:77:86: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:78:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:78:19: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:79:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:79:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:81:13: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:83:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:84:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:84:24: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:85:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:85:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:87:13: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:89:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:90:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:90:22: '3' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:90:24: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:91:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:91:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:93:13: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:95:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:96:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:96:24: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:97:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:97:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:99:13: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:101:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\stuff\GameState.java:102:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:13:17: Name 'attacked_this_turn' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:20:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'assign_position' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'assign_position' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:20:17: Name 'assign_position' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:20:33: Parameter minion should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:20:47: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:21:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:21:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:23:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:23:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:25:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:25:45: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:28:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:29:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:29:50: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:32:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:33:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:33:54: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:35:30: '3' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:36:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:37:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:37:48: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:39:30: '4' is a magic number. [MagicNumber]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:43:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:47:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:51:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:55:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:59:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:63:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:67:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:71:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:75:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:75:28: Parameter ability should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:79:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:79:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:83:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:83:27: Parameter colors should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:87:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:87:32: Parameter description should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:91:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:91:27: Parameter health should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:95:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:95:25: Parameter mana should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:99:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:99:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:103:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:103:29: Parameter position should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:107:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:107:27: Parameter frozen should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:111:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:115:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setAttacked_this_turn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setAttacked_this_turn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:115:17: Name 'setAttacked_this_turn' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:115:39: Parameter attacked_this_turn should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:115:43: Name 'attacked_this_turn' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:119:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getAttacked_this_turn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getAttacked_this_turn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Minion.java:119:16: Name 'getAttacked_this_turn' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:6:9: Variable 'wins' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:11:17: Name 'NrOfCardsInHand' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:12:37: Name 'CardsInHand' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:13:17: Name 'player_turn_check' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:16:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getBackRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getBackRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:20:19: Parameter card should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:20:32: Parameter deck should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:29:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getFrontRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getFrontRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:33:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addToBackRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addToBackRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:33:30: Parameter backRow should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:33:48: 'backRow' hides a field. [HiddenField]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:33:57: Parameter card should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:40:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addToFrontRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addToFrontRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:40:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:40:31: Parameter frontRow should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:40:49: 'frontRow' hides a field. [HiddenField]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:40:59: Parameter card should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:47:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addCardToHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addCardToHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:47:31: Parameter card should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:47:44: Parameter deck should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:54:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'removeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'removeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:54:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:54:28: Parameter hand should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:54:52: Parameter i should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:59:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getCardFromHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getCardFromHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:59:35: Parameter index should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:62:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getCardFromCoordonates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getCardFromCoordonates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:62:42: Parameter player1 should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:62:58: Parameter player2 should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:62:74: Parameter x should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:62:81: Parameter y should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:62:87: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:63:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:63:19: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:65:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:66:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:66:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:68:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:68:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:75:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getNrOfCardsBack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getNrOfCardsBack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:79:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getNrOfCardsFront' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getNrOfCardsFront' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:83:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getCardsInHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getCardsInHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:87:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPlayer_turn_check' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPlayer_turn_check' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:87:17: Name 'setPlayer_turn_check' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:87:38: Parameter player_turn_check should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:87:42: Name 'player_turn_check' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:91:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPlayer_turn_check' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPlayer_turn_check' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:91:16: Name 'getPlayer_turn_check' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:95:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:99:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:99:25: Parameter mana should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:103:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getNrOfCardsInHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getNrOfCardsInHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:107:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setNrOfCardsBack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setNrOfCardsBack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:107:34: Parameter nrOfCardsBack should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:111:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setNrOfCardsFront' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setNrOfCardsFront' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:111:35: Parameter nrOfCardsFront should be final. [FinalParameters]
[ERROR] C:\tema1_poo\tema\.\src\stuff\Player.java:115:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getWins' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getWins' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 434 errors.
